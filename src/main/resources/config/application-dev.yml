# ===================================================================
# Spring Boot configuration for the "dev" profile.
#
# This configuration overrides the application.yml file.
# ===================================================================

# ===================================================================
# Standard Spring Boot properties.
# Full reference is available at:
# http://docs.spring.io/spring-boot/docs/current/reference/html/common-application-properties.html
# ===================================================================

logging:
  level:
    ROOT: DEBUG
    com.megazone.framework: DEBUG
    org.hibernate.SQL: DEBUG
    com.fleta.watchingservice: DEBUG

spring:
  devtools:
    restart:
      enabled: true
      additional-exclude: static/**,.h2.server.properties
    livereload:
      enabled: false # we use Webpack dev server + BrowserSync for livereload
  jackson:
    serialization:
      indent-output: true
  h2:
    console:
      # disable spring boot built-in h2-console since we start it manually with correct configuration
      enabled: false
  liquibase:
    # Remove 'faker' if you do not want the sample data to be loaded automatically
    contexts: dev, faker
    url: jdbc:h2:file:./build/h2db/db/watchingservice;DB_CLOSE_DELAY=-1
  messages:
    cache-duration: PT1S # 1 second, see the ISO 8601 standard
  r2dbc:
    url: r2dbc:postgresql://bmt-vodprogramming.cluster-cojldwm5j4cg.ap-northeast-2.rds.amazonaws.com:5432/mylgdb
    username: postgres
    password: BmtAdmin1!
  thymeleaf:
    cache: false
  sleuth:
    sampler:
      probability: 1 # report 100% of traces
  zipkin: # Use the "zipkin" Maven profile to have the Spring Cloud Zipkin dependencies
    base-url: http://localhost:9411
    enabled: false
    locator:
      discovery:
        enabled: true
  redis:
    host: localhost
    port: 6379

server:
  port: 8085

mega:
  # CORS is disabled by default on microservices, as you should access them through a gateway.
  # If you want to enable it, please uncomment the configuration below.
  # cors:
  #   allowed-origins: "http://localhost:9000"
  #   allowed-methods: "*"
  #   allowed-headers: "*"
  #   exposed-headers: "Authorization,Link,X-Total-Count"
  #   allow-credentials: true
  #   max-age: 1800
  security:
    authentication:
      jwt:
        # This token must be encoded using Base64 and be at least 256 bits long (you can type `openssl rand -base64 64` on your command line to generate a 512 bits one)
        base64-secret: YmZhMzc4MDg4ZWY5Mzk1NTEyNzMxZjA2MjA2ZjUwOWRkZTc2OGFlMzBjNzY4NGQ0ZDkzMDlhYmIzOTA3ZTg1MDc5MWYzYjEwYzUzNmFiNDE0MGJhZjhhZDg4YjJkMjczZGFjMDJiYTgxNjhkMmRkZTAzOTY2NWZjZTJjNDMwY2Q=
        # Token is valid 24 hours
        token-validity-in-seconds: 86400
        token-validity-in-seconds-for-remember-me: 2592000
  logging:
    use-json-format: false # By default, logs are not in Json format
    logstash: # Forward logs to logstash over a socket, used by LoggingConfiguration
      enabled: false
      host: localhost
      port: 5000
      queue-size: 512

# ===================================================================
# Application specific properties
# ===================================================================

repository-type: r2dbc
#repository-type: redis
